name: release

on:
  push:
    tags:
      - "v*"

env:
  SHORT_NAME: center
  CRATE_NAME: mesagisto-center

jobs:
  compile:
    name: Compile
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release_name: x86_64-linux
            postfix: ""
            extra_args: ""
            cross: true

          - os: ubuntu-latest
            target: i686-unknown-linux-musl
            release_name: i686-linux
            postfix: ""
            extra_args: ""
            cross: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release_name: aarch64-linux
            postfix: ""
            extra_args: ""
            cross: true
          # Windows GNU
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            release_name: x86_64-windows.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features no-color"
            cross: true

          - os: ubuntu-latest
            target: i686-pc-windows-gnu
            release_name: i686-windows.exe
            postfix: ".exe"
            extra_args: "--no-default-features --features no-color"
            cross: true

          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            release_name: x86_64-windows-colored.exe
            postfix: ".exe"
            extra_args: ""
            cross: true

          - os: ubuntu-latest
            target: i686-pc-windows-gnu
            release_name: i686-windows-colored.exe
            postfix: ".exe"
            extra_args: ""
            cross: true
          # Mac OSX
          - os: macos-latest
            target: x86_64-apple-darwin
            release_name: x86_64-mac
            postfix: ""
            extra_args: ""
            cross: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Resume cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.target }}-release-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.target }}-release

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          target: ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }} ${{ matrix.extra_args }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/${{ env.CRATE_NAME }}${{ matrix.postfix }} ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: compile
          path: ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

  release:
    name: Release
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: compile
          path: ./packages

      - name: Compress
        run: bash ./.github/compress.sh

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            packages/*
            LICENSE
  docker:
    name: Docker
    needs: [compile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: compile
          path: ./packages

      - name: Rename binaries
        run: |
          cd packages
          mv ${{ env.SHORT_NAME }}-x86_64-linux amd64-linux
          mv ${{ env.SHORT_NAME }}-aarch64-linux arm64-linux

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the version tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .github/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/mesagisto/mesagisto-center:${{ steps.get_version.outputs.VERSION }}
